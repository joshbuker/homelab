networks:
  monitoring_overlay: {}
  nginx_reverse_proxy:
    external: true

volumes:
  prometheus_storage: {}
  grafana_storage: {}

services:
  mikrotik_exporter:
    container_name: mktxp
    image: ghcr.io/akpw/mktxp:latest
    user: root
    volumes:
      - './config/mktxp/:/root/mktxp/'
    networks:
      - monitoring_overlay
    restart: unless-stopped

  grafana:
    container_name: grafana
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_AUTH_BASIC_ENABLED: "false"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_USERS_DEFAULT_THEME: "dark"
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /etc/grafana/provisioning/dashboards/mikrotik/mikrotik_mktxp_exporter.json
    image: grafana/grafana:latest
    networks:
      - monitoring_overlay
      - nginx_reverse_proxy
    # ports:
    # - 3000:3000/tcp
    restart: unless-stopped
    volumes:
      -  grafana_storage:/var/lib/grafana
      - ./config/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./config/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro

  loki:
    command: -config.file=/etc/loki/loki-config.yml
    container_name: loki
    image: grafana/loki:latest
    networks:
      - monitoring_overlay
    ports:
      - 3100:3100/tcp
    restart: unless-stopped
    volumes:
      - ./config/loki/loki-config.yml:/etc/loki/loki-config.yml

  prometheus:
    command:
      - --config.file=/etc/prometheus/prometheus-config.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=1y
      - --web.enable-admin-api
      - --web.enable-lifecycle
    container_name: prometheus
    image: prom/prometheus:latest
    networks:
      - monitoring_overlay
    ports:
      - 9090:9090/tcp
    restart: unless-stopped
    volumes:
      - prometheus_storage:/prometheus
      - ./config/prometheus/prometheus-config.yml:/etc/prometheus/prometheus-config.yml:ro

  promtail:
    command: -config.file=/etc/promtail/promtail-config.yml
    container_name: promtail
    image: grafana/promtail:latest
    networks:
      - monitoring_overlay
    ports:
      - 1514:1514/tcp
      - 9080:9080/tcp
    restart: unless-stopped
    volumes:
    - ./config/promtail/promtail-config.yml:/etc/promtail/promtail-config.yml:ro

  syslog-ng:
    command: -edv
    container_name: syslog-ng
    depends_on:
      - promtail
    image: balabit/syslog-ng:latest
    networks:
      - monitoring_overlay
    ports:
      - 514:514/udp # This needs to be exposed to allow sending syslog entries into it
      - 601:601/tcp
    restart: unless-stopped
    volumes:
    - ./config/syslog-ng/syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf:ro

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.8.1
    container_name: node_exporter
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    ports:
      - 9100:9100/tcp
    volumes:
      - /:/host:ro,rslave
    networks:
      - monitoring_overlay

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    restart: unless-stopped
    networks:
      - monitoring_overlay
