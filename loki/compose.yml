networks:
  loki:

services:
  prometheus:
    image: prom/prometheus
    command: '--config.file=/etc/prometheus/config.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.deployment.target.loki == true
    networks:
      - loki

  loki:
    # TODO: Might need to lock this down depending on how unstable latest is
    image: grafana/loki:2.9.2
    # image: grafana/loki:latest
    volumes:
      - loki-data:/loki
    restart: unless-stopped
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.deployment.target.loki == true
    ports:
      - "3100:3100"
    # command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki

  promtail:
    # TODO: Might need to lock this down depending on how unstable latest is
    image: grafana/promtail:2.9.2
    # image: grafana/promtail:latest
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.deployment.target.loki == true
    volumes:
      - /var/log:/var/log
    # command: -config.file=/etc/promtail/config.yml
    networks:
      - loki

  grafana:
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    restart: unless-stopped
    # entrypoint:
    #   - sh
    #   - -euc
    #   - |
    #     mkdir -p /etc/grafana/provisioning/datasources
    #     cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
    #     apiVersion: 1
    #     datasources:
    #     - name: Loki
    #       type: loki
    #       access: proxy
    #       orgId: 1
    #       url: http://loki:3100
    #       basicAuth: false
    #       isDefault: true
    #       version: 1
    #       editable: false
    #     EOF
    #     /run.sh
    image: grafana/grafana:latest
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.deployment.target.loki == true
    ports:
      - ${GRAFANA_PORT:-3000}:3000/tcp
    networks:
      - loki

volumes:
  grafana-storage: {}
  loki-data: {}
  prometheus-data: {}
