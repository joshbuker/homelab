networks:
  frontend:
    driver: bridge
    ipam:
      config:
        - subnet: ${FRONTEND_OVERLAY_SUBNET:?Please set FRONTEND_OVERLAY_SUBNET}
  nginx_reverse_proxy:
    external: true

services:
  jellyfin:
    image: ghcr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    networks:
      frontend:
        ipv4_address: ${FRONTEND_JELLYFIN_STATIC_IP:?Please set FRONTEND_JELLYFIN_STATIC_IP}
      nginx_reverse_proxy: null
    environment:
      PUID: 1000
      PGID: 1000
      TZ: '${TZ:-America/Los_Angeles}'
      DOCKER_MODS: 'ghcr.io/jumoog/intro-skipper'
    volumes:
      - ./config/jellyfin:/config
      - jellyfin_transcode:/media/transcode-cache
      - jellyfin_data:/media
    ports:
      - ${JELLYFIN_HTTP_PORT:-8096}:8096/tcp
      - ${JELLYFIN_HTTPS_PORT:-8920}:8920/tcp
    # devices:
    #   - /dev/dri/renderD128:/dev/dri/renderD128
    logging:
      driver: "json-file"
      options:
        max-file: "5"   # number of files or file count
        max-size: "10m" # file size
    restart: unless-stopped
  qbittorrent:
    image: ghcr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: service:gluetun
    environment:
      PUID: 1000
      PGID: 1000
      TZ: '${TZ:-America/Los_Angeles}'
      UMASK: 022
      WEBUI_PORT: ${QBITTORRENT_UI_PORT:-8085}
    volumes:
      - ./config/qbittorrent:/config
      - media_downloads:/downloads
    logging:
      driver: "json-file"
      options:
        max-file: "5"   # number of files or file count
        max-size: "10m" # file size
    restart: unless-stopped
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    network_mode: service:gluetun
    environment:
      PUID: 1000
      PGID: 1000
      TZ: '${TZ:-America/Los_Angeles}'
    volumes:
      - ./config/sabnzbd:/config
      - media_downloads:/downloads
    logging:
      driver: "json-file"
      options:
        max-file: "5"   # number of files or file count
        max-size: "10m" # file size
    restart: unless-stopped
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      #PUID: 1000
      #PGID: 1000
      LOG_LEVEL: info
      TZ: '${TZ:-America/Los_Angeles}'
    network_mode: service:gluetun
    volumes:
      - ./config/jellyseerr:/app/config
    logging:
      driver: "json-file"
      options:
        max-file: "5"   # number of files or file count
        max-size: "10m" # file size
    restart: unless-stopped
  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      PUID: 1000
      PGID: 1000
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_HTML: ${LOG_HTML:-false}
      CAPTCHA_SOLVER: ${CAPTCHA_SOLVER:-none}
      TZ: '${TZ:-America/Los_Angeles}'
    network_mode: service:gluetun
    logging:
      driver: "json-file"
      options:
        max-file: "5"   # number of files or file count
        max-size: "10m" # file size
    restart: unless-stopped
  sonarr:
    image: ghcr.io/linuxserver/sonarr:latest
    container_name: sonarr
    network_mode: service:gluetun
    environment:
      PUID: 1000
      PGID: 1000
      TZ: '${TZ:-America/Los_Angeles}'
      DOCKER_MODS: 'linuxserver/mods:radarr-striptracks'
    volumes:
      - ./config/sonarr:/config
      - streaming_data:/data
      # - plex_media:/plex
      # - /media/ramcache:/config/temp
      - ./config/sonarr/extended/custom-services:/custom-services.d
      - ./config/sonarr/extended/custom-cont-int:/custom-cont-init.d
      # ORIGINAL VOLUMES
      # - ~/docker/config/sonarr:/config
      # - /media/library/jellyfin/tv:/tv
      # - /media/downloads:/downloads
      # - /media/ramcache:/config/temp
      # - ~/docker/config/sonarr/extended/custom-services:/custom-services.d
      # - ~/docker/config/sonarr/extended/custom-cont-init:/custom-cont-init.d
    logging:
      driver: "json-file"
      options:
        max-file: "5"   # number of files or file count
        max-size: "10m" # file size
    restart: unless-stopped
  radarr:
    image: ghcr.io/linuxserver/radarr:latest
    container_name: radarr
    network_mode: service:gluetun
    environment:
      PUID: 1000
      PGID: 1000
      TZ: '${TZ:-America/Los_Angeles}'
      DOCKER_MODS: 'linuxserver/mods:radarr-striptracks'
    volumes:
      - ./config/radarr:/config
      - streaming_data:/data
      # - plex_media:/plex
      # - /media/ramcache:/config/temp
      - ./config/radarr/extended/custom-services:/custom-services.d
      - ./config/radarr/extended/custom-cont-int:/custom-cont-init.d
    logging:
      driver: "json-file"
      options:
        max-file: "5"   # number of files or file count
        max-size: "10m" # file size
    restart: unless-stopped
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: '${TZ:-America/Los_Angeles}'
    volumes:
      - ./config/prowlarr:/config
    network_mode: service:gluetun
    logging:
      driver: "json-file"
      options:
        max-file: "5"   # number of files or file count
        max-size: "10m" # file size
    restart: unless-stopped
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    networks:
      frontend:
        ipv4_address: ${FRONTEND_GLUETUN_STATIC_IP:?Please set FRONTEND_GLUETUN_STATIC_IP}
      nginx_reverse_proxy: null
    cap_add:
      - NET_ADMIN
    environment:
      PUID: 1000
      PGID: 1000
      VPN_SERVICE_PROVIDER: ${VPN_PROVIDER:-protonvpn}
      VPN_TYPE: ${VPN_TYPE:-wireguard}
      WIREGUARD_PRIVATE_KEY: ${WIREGUARD_KEY:?Please set WIREGUARD_KEY}
      SERVER_COUNTRIES: ${VPN_COUNTRY:-United States}
      SECURE_CORE_ONLY: on
      HTTP_CONTROL_SERVER_ADDRESS: ":8087"
      BLOCK_SURVEILLANCE: on
      FIREWALL_OUTBOUND_SUBNETS: ${FIREWALL_OUTBOUND_SUBNETS:?Please set FIREWALL_OUTBOUND_SUBNETS}
      TZ: ${TZ:-America/Los_Angeles}
      UPDATER_PERIOD: ${VPN_UPDATER_PERIOD:-168h} # Update every week
    volumes:
      - tmp_cache:/tmp
    ports:
      - ${GLUETON_API_PORT:-8087}:8087 # Gluetun HTTP API
      - ${SABNZBD_PORT:-8086}:8080 # SABnzbd HTTP Interface
      - ${QBITTORRENT_UI_PORT:-8085}:${QBITTORRENT_UI_PORT:-8085}/tcp # qBittorrent HTTP Interface
      - ${RADARR_PORT:-7878}:7878 # Radarr HTTP Interface and API
      - ${SONARR_PORT:-8989}:8989 # Sonarr HTTP Interface and API
      - ${PROWLARR_PORT:-9696}:9696 # Prowlarr HTTP Interface and API
      - ${FLARESOLVERR_PROXY_PORT:-8191}:8191 # Flaresolverr proxy
      - ${JELLYSEERR_PORT:-5055}:5055 # Jellyseerr HTTP Interface
      - ${BAZARR_UI_PORT:-6767}:6767 # Bazarr HTTP Interface
      - ${HOMEARR_UI_PORT:-7575}:7575 # Homearr HTTP Interface
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "5"   # number of files or file count
        max-size: "10m" # file size
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: '${TZ:-America/Los_Angeles}'
    volumes:
      - tmp_cache:/tmp
      - ./config/bazarr/:/config
      - jellyfin_data:/library
    network_mode: service:gluetun
    logging:
      driver: "json-file"
      options:
        max-file: "5"   # number of files or file count
        max-size: "10m" # file size
    restart: unless-stopped
  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    network_mode: service:gluetun
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration
      - ./config/homarr/configs:/app/data/configs
      - ./config/homarr/icons:/app/public/icons
      - ./config/homarr/data:/data
      - tmp_cache:/tmp
    logging:
      driver: "json-file"
      options:
        max-file: "5"   # number of files or file count
        max-size: "10m" # file size

volumes:
  jellyfin_transcode:
    driver_opts:
      type: tmpfs
      o: "nodev,nosuid,noexec,nodiratime,size=32G"
      device: /media/transcode-cache
  tmp_cache:
    driver_opts:
      type: tmpfs
      o: "nodev,nosuid,noexec,nodiratime,size=32G"
      device: /media/tmp-cache
  jellyfin_data:
    driver_opts:
      type: "nfs"
      o: "addr=${STREAMING_DATA_NAS_ADDRESS:?Please set STREAMING_DATA_NAS_ADDRESS},rw,noatime,rsize=8192,wsize=8192,tcp,timeo=14,nfsvers=4"
      device: ":${STREAMING_DATA_NAS_DEVICE:?Please set STREAMING_DATA_NAS_DEVICE}/library"
  streaming_data:
    driver_opts:
      type: "nfs"
      o: "addr=${STREAMING_DATA_NAS_ADDRESS:?Please set STREAMING_DATA_NAS_ADDRESS},rw,noatime,rsize=8192,wsize=8192,tcp,timeo=14,nfsvers=4"
      device: ":${STREAMING_DATA_NAS_DEVICE:?Please set STREAMING_DATA_NAS_DEVICE}"
  media_downloads:
    driver_opts:
      type: "nfs"
      o: "addr=${STREAMING_DATA_NAS_ADDRESS:?Please set STREAMING_DATA_NAS_ADDRESS},rw,noatime,rsize=8192,wsize=8192,tcp,timeo=14,nfsvers=4"
      device: ":${STREAMING_DATA_NAS_DEVICE:?Please set STREAMING_DATA_NAS_DEVICE}/downloads"
  # plex_media:
  #   driver_opts:
  #     type: "nfs"
  #     o: "addr=${PLEX_NAS_ADDRESS:?Please configure PLEX_NAS_ADDRESS},rw,noatime,rsize=8192,wsize=8192,tcp,timeo=14,nfsvers=4"
  #     device: ":${PLEX_NAS_DEVICE:?Please configure PLEX_NAS_DEVICE}"
